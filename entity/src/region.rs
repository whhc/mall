//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "region")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub region_id: i64,
    pub region_name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::product_region::Entity")]
    ProductRegions,
}

impl Related<super::product::Entity> for Entity {
    fn to() -> RelationDef {
        super::product_region::Relation::Product.def()
    }

    fn via() -> Option<RelationDef> {
        Some(super::product_region::Relation::Region.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
